@model BTCPayServer.Models.ServerViewModels.DynamicDnsViewModel
@{
    ViewData.SetActivePageAndTitle(ServerNavPages.Services);
}


<h4>Dynamic DNS Settings</h4>
<partial name="_StatusMessage" for="@TempData["TempDataProperty-StatusMessage"]" />

<div class="row">
    <div class="col-md-8">
        <div class="form-group">
            <p>
                <span>Dynamic DNS service allows you to have a stable DNS name pointing to your server, even if your IP address change regulary. <br />
                This is recommended if you are hosting BTCPayServer at home and wish to have a clearnet HTTPS address to access your server.</span>
            </p>
            <p>Note that you need to properly configure your NAT and BTCPayServer install to get HTTPS certificate.</p>
        </div>
        <form method="post">
            <div class="form-group">
                <div class="form-group">
                    <label asp-for="Settings.ServiceUrl"></label>
                    <input id="ServiceUrl" asp-for="Settings.ServiceUrl" class="form-control" placeholder="Url" />
                    <p class="form-text text-muted">
                        Well-known Dynamic DNS providers are:
                        @for (int i = 0; i < Model.KnownServices.Length; i++)
                        {
                            <a href="#" onclick="document.getElementById('ServiceUrl').value = '@Model.KnownServices[i].Url'; return false;">@Model.KnownServices[i].Name</a><span>@(i == Model.KnownServices.Length - 1 ? "" : ",")</span>
                        }
                    </p>
                </div>
                <div class="form-group">
                    <label asp-for="Settings.Hostname"></label>
                    <input asp-for="Settings.Hostname" class="form-control" placeholder="Hostname" />
                    <p class="form-text text-muted">
                        <span>The DNS record has been refreshed: </span>
                        @if (Model.LastUpdated != null)
                        {
                            <span>@Model.LastUpdated</span>
                        }
                    </p>
                </div>
                <div class="form-group">
                    <label asp-for="Settings.Login"></label>
                    <input asp-for="Settings.Login" class="form-control" placeholder="Login" />
                </div>
                <div class="form-group">
                    <label asp-for="Settings.Password"></label>
                    <input asp-for="Settings.Password" class="form-control" placeholder="Password" />
                </div>
                <div class="form-group">
                    <label asp-for="Settings.Enabled"></label>
                    <input asp-for="Settings.Enabled" class="form-check-inline" type="checkbox" />
                </div>

                <button name="command" class="btn btn-primary" type="submit" value="Save">Save</button>
            </div>
        </form>
    </div>
</div>
