@addTagHelper *, Meziantou.AspNetCore.BundleTagHelpers
@model PaymentModel
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <title>BTCPay Invoice</title>

    <bundle name="wwwroot/bundles/checkout-bundle.min.css" />

    <script type="text/javascript">
		@Model.ToJSVariableModel("srvModel")
    </script>

    <bundle name="wwwroot/bundles/checkout-bundle.min.js" />
</head>
<body style="background: #E4E4E4">
    <noscript>
        <center style="padding: 2em">
            <h2>Javascript is currently disabled in your browser.</h2>
            <h5>Please enable Javascript and refresh this page for the best experience.</h5>

            <p>Alternatively, click below to continue to our HTML-only invoice.</p>

            <form action="/invoice-noscript" method="GET">
                <button style="text-decoration: underline; color: blue">Continue to javascript-disabled invoice &gt;</button>
            </form>
        </center>
    </noscript>

    <!--[if lte IE 8]>
    <center style="padding: 2em">
      <form action="/invoice-noscript" method="GET">
        <button style="text-decoration: underline; color: blue">Continue to legacy browser compatible invoice page
        </button>
      </form>
    </center>
    <![endif]-->

    <invoice>
        <div class="no-bounce" id="checkoutCtrl">
            <div class="modal page">
                <div class="modal-dialog open opened" role="document">
                    <div class="modal-content long">
                        <div class="content">
                            <div class="invoice">
                                @Html.Partial("Checkout-Body")
                            </div>
                        </div>
                    </div>
                    <div style="margin-top: 10px; text-align: right;">
                        @* Not working because of nsSeparator: false, keySeparator: false,
                            {{$t("nested.lang")}} >>
                        *@
                        <select class="cmblang reverse" onchange="changeLanguage($(this).val())">
                            <option value="en-US">English</option>
                            <option value="de-DE">Deutsch</option>
                        </select>
                        <script>
                            $(function () {
                                if (urlParams.lang) {
                                    $(".cmblang").val(urlParams.lang);
                                    changeLanguage(urlParams.lang);
                                }

                                $('select').prettyDropdown({
                                    classic: false,
                                    height: 30,
                                    reverse: true,
                                    hoverIntent: 5000
                                });
                            });

                            function changeLanguage(lang) {
                                i18next.changeLanguage(lang);
                            }
                        </script>
                    </div>
                </div>
            </div>
        </div>
    </invoice>
    <script type="text/javascript">
        // initialization
        i18next.init({
            lng: 'en',
            fallbackLng: 'en',
            nsSeparator: false,
            keySeparator: false,
            resources: {
                en: { translation: locales_en },
                de: { translation: locales_de }
            },
        });

        const i18n = new VueI18next(i18next);

        // TODO: Move all logic from core.js to Vue controller
        Vue.config.ignoredElements = [
            'line-items',
            'low-fee-timeline',
            // Ignoring custom HTML5 elements, eg: bp-spinner
            /^bp-/
        ];
        var checkoutCtrl = new Vue({
            i18n: i18n,
            el: '#checkoutCtrl',
            components: {
                qrcode: VueQr
            },
            data: {
                srvModel: srvModel,
                expiringSoon: false
            }
        });
    </script>
</body>
</html>
