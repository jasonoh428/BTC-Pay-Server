@model DerivationSchemeViewModel
@{
    Layout = "../Shared/_NavLayout.cshtml";
    ViewData["Title"] = "Add derivation scheme";
    ViewData.AddActivePage(BTCPayServer.Views.Stores.StoreNavPages.Index);
}

<h4>@ViewData["Title"]</h4>

<div class="row">
    <div class="col-md-6">
        <div asp-validation-summary="All" class="text-danger"></div>
    </div>
</div>
<div class="row">
    <div class="col-md-6">
        <form method="post">
            @if(!Model.Confirmation)
    {
        <div class="form-group">
            <h5>Derivation Scheme</h5>
            <span>The DerivationScheme represents the destination of the funds received by your invoice. It is generated by your wallet software. Please, verify that you are generating the right addresses by clicking on 'Check ExtPubKey'</span>
        </div>
        <div class="form-group">
            <label asp-for="CryptoCurrency"></label>
            <select asp-for="CryptoCurrency" asp-items="Model.CryptoCurrencies" class="form-control"></select>
        </div>

        <div class="form-group">
            <input asp-for="DerivationScheme" class="form-control" />
            <span asp-validation-for="DerivationScheme" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="DerivationSchemeFormat"></label>
            <select asp-for="DerivationSchemeFormat" asp-items="Model.DerivationSchemeFormats" class="form-control"></select>
        </div>
        <div class="form-group">
            <span>BTCPay format memo</span>
            <table class="table">
                <thead class="thead-inverse">
                    <tr>
                        <th>Address type</th>
                        <th>Example</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>P2WPKH</td>
                        <td>xpub</td>
                    </tr>
                    <tr>
                        <td>P2SH-P2WPKH</td>
                        <td>xpub-[p2sh]</td>
                    </tr>
                    <tr>
                        <td>P2PKH</td>
                        <td>xpub-[legacy]</td>
                    </tr>
                    <tr>
                        <td>Multi-sig P2WSH</td>
                        <td>2-of-xpub1-xpub2</td>
                    </tr>
                    <tr>
                        <td>Multi-sig P2SH-P2WSH</td>
                        <td>2-of-xpub1-xpub2-[p2sh]</td>
                    </tr>
                    <tr>
                        <td>Multi-sig P2SH</td>
                        <td>2-of-xpub1-xpub2-[legacy]</td>
                    </tr>
                </tbody>
            </table>
        </div>
        <button name="command" type="submit" class="btn btn-info">Continue</button>
}
else
{
        <div class="form-group">
            <h5>Confirm the addresses (@Model.CryptoCurrency)</h5>
            <span>Please check that your @Model.CryptoCurrency wallet is generating the same addresses as below.</span>
        </div>
        <input type="hidden" asp-for="CryptoCurrency" />
        <input type="hidden" asp-for="Confirmation" />
        <input type="hidden" asp-for="DerivationScheme" />
        <div class="form-group">
            <table class="table">
                <thead class="thead-inverse">
                    <tr>
                        <th>Key path</th>
                        <th>Address</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach(var sample in Model.AddressSamples)
            {
                <tr>
                    <td>@sample.KeyPath</td>
                    <td>@sample.Address</td>
                </tr>
    }
                </tbody>
            </table>
        </div>
        <button name="command" type="submit" class="btn btn-success">Confirm</button>
}
        </form>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
