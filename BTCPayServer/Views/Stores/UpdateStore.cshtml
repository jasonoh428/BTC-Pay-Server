@model StoreViewModel
@{
    Layout = "../Shared/_NavLayout.cshtml";
    ViewData["Title"] = "Profile";
    ViewData.AddActivePage(BTCPayServer.Views.Stores.StoreNavPages.Index);
}

<h4>@ViewData["Title"]</h4>
@Html.Partial("_StatusMessage", Model.StatusMessage)

<div class="row">
    <div class="col-md-6">
        <div asp-validation-summary="All" class="text-danger"></div>
    </div>
</div>
<div class="row">
    <div class="col-md-6">
        <form method="post">
            <div class="form-group">
                <label asp-for="StoreName"></label>
                <input asp-for="StoreName" class="form-control" />
                <span asp-validation-for="StoreName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StoreWebsite"></label>
                <input asp-for="StoreWebsite" class="form-control" />
                <span asp-validation-for="StoreWebsite" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="NetworkFee"></label>
                <input asp-for="NetworkFee" type="checkbox" class="form-check" />
            </div>
            <div class="form-group">
                <label asp-for="SpeedPolicy"></label>
                <select asp-for="SpeedPolicy" class="form-control">
                    <option value="0">Is unconfirmed</option>
                    <option value="1">Has at least 1 confirmation</option>
                    <option value="2">Has at least 6 confirmations</option>
                </select>
                <span asp-validation-for="SpeedPolicy" class="text-danger"></span>
            </div>
            <div class="form-group">
                <h5>Derivation Scheme</h5>
                @if(Model.AddressSamples.Count == 0)
                {
                    <span>The DerivationScheme represents the destination of the funds received by your invoice. It is generated by your wallet software. Please, verify that you are generating the right addresses by clicking on 'Check ExtPubKey'</span>
                }
            </div>
            <div class="form-group">
                <input asp-for="DerivationScheme" class="form-control" />
                <span asp-validation-for="DerivationScheme" class="text-danger"></span>
            </div>
            <div class="form-group">
                @if(Model.AddressSamples.Count == 0)
                {
                    <table class="table">
                        <thead class="thead-inverse">
                            <tr>
                                <th>Address type</th>
                                <th>Example</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>P2WPKH</td>
                                <td>xpub</td>
                            </tr>
                            <tr>
                                <td>P2SH-P2WPKH</td>
                                <td>xpub-[p2sh]</td>
                            </tr>
                            <tr>
                                <td>P2PKH</td>
                                <td>xpub-[legacy]</td>
                            </tr>
                            <tr>
                                <td>Multi-sig P2WSH</td>
                                <td>2-of-xpub1-xpub2</td>
                            </tr>
                            <tr>
                                <td>Multi-sig P2SH-P2WSH</td>
                                <td>2-of-xpub1-xpub2-[p2sh]</td>
                            </tr>
                            <tr>
                                <td>Multi-sig P2SH</td>
                                <td>2-of-xpub1-xpub2-[legacy]</td>
                            </tr>
                        </tbody>
                    </table>
                }
                else
                {
                    <table class="table">
                        <thead class="thead-inverse">
                            <tr>
                                <th>Key path</th>
                                <th>Address</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach(var sample in Model.AddressSamples)
                            {
                                <tr>
                                    <td>@sample.KeyPath</td>
                                    <td>@sample.Address</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>
            <button name="command" type="submit" class="btn btn-success" value="Save">Save</button>
            <button name="command" type="submit" class="btn btn-default" value="Check">Check ExtPubKey</button>
        </form>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
